import React, { useMemo } from 'react';
import { Layout, Menu, Tooltip, Popover } from 'antd';
import Icon, {
  HomeOutlined, SettingOutlined, VideoCameraOutlined, BlockOutlined, FundProjectionScreenOutlined, AuditOutlined, UserOutlined
} from '@ant-design/icons';
import { useLocation, useNavigate } from 'react-router';
import { menuConfig } from './config/siderNav';
import styles from './index.module.less';
import { getUserAuthList, getUserData } from '@/utils/utils';

const { Sider } = Layout;
const projectIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" fill="none" version="1.1" width="28" height="28" viewBox="0 0 28 28">
    <g>
      <path d="M26.6169,19.2907L27.6315,21.0529L16.0092,27.4889C14.7846,28.167,13.2881,28.1706,12.0602,27.4982L0.336997,21.0787L1.34287,19.3118L13.0661,25.7312C13.666,26.0596,14.3963,26.0579,14.9947,25.7267L26.6169,19.2907L26.6169,19.2907ZM26.6169,13.2196L27.6315,14.9818L16.0092,21.4178C14.7846,22.0959,13.2881,22.0995,12.0602,21.4271L0.336997,15.0076L1.34287,13.2407L13.0661,19.6601C13.666,19.9885,14.3963,19.9868,14.9947,19.6556L26.6169,13.2196L26.6169,13.2196ZM15.4669,0.375551L27.2325,6.84023C27.9556,7.23754,28.2134,8.13445,27.8083,8.84359C27.6729,9.08039,27.4737,9.27579,27.2325,9.40823L15.467,15.8729C14.5553,16.3736,13.4448,16.3736,12.5331,15.8729L0.76749,9.40823C0.0444007,9.01096,-0.213353,8.11401,0.191728,7.4049C0.327067,7.1681,0.52631,6.9727,0.767456,6.84027L12.533,0.37555C13.4447,-0.125183,14.5552,-0.125183,15.4669,0.375551ZM13.5416,2.14104L2.65232,8.12423L13.5416,14.1074C13.8265,14.2639,14.1735,14.2639,14.4584,14.1074L25.3477,8.12423L14.4584,2.14104C14.1735,1.98457,13.8265,1.98457,13.5416,2.14104Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
    </g>
  </svg>
);
const pluginIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" fill="none" version="1.1" width="28" height="28" viewBox="0 0 28 28">
    <g>
      <path d="M0,14L6.45307,20.4531L5.8968,21.0093C3.98156,19.8451,1.48955,20.9114,1.00923,23.1007C0.528912,25.2899,2.34562,27.3016,4.57233,27.0461C6.79904,26.7907,8.11297,24.4199,7.14933,22.3963L7.7728,21.7728L14,28L28,14L21.7728,7.7728L19.5757,9.96987C19.7596,11.1142,18.8671,12.1477,17.7082,12.1325C16.5493,12.1173,15.6843,11.0607,15.8981,9.92163C16.1119,8.78254,17.3011,8.11156,18.3867,8.5176L20.4531,6.45307L14,0L7.6608,6.3392L7.07467,5.75493C8.1409,3.78307,6.94962,1.34771,4.73848,0.979001C2.52733,0.610291,0.610291,2.52734,0.979001,4.73848C1.34771,6.94962,3.78307,8.1409,5.75493,7.07467L6.3392,7.6608L0,14ZM14,2.63947L17.8976,6.53707L17.7856,6.53333L17.7333,6.53333C15.65,6.53327,13.9698,8.23828,14.0003,10.3214C14.0308,12.4044,15.7603,14.0595,17.8427,13.9984C19.9251,13.9373,21.5546,12.1837,21.4629,10.1024L25.3605,14L14,25.3605L2.63947,14L14,2.63947ZM4.2,5.6C4.9732,5.6,5.6,4.9732,5.6,4.2C5.6,3.4268,4.9732,2.8,4.2,2.8C3.4268,2.8,2.8,3.4268,2.8,4.2C2.8,4.9732,3.4268,5.6,4.2,5.6ZM5.6,23.8C5.6,24.5732,4.9732,25.2,4.2,25.2C3.4268,25.2,2.8,24.5732,2.8,23.8C2.8,23.0268,3.4268,22.4,4.2,22.4C4.9732,22.4,5.6,23.0268,5.6,23.8Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
    </g>
  </svg>
);
const documentIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" fill="none" version="1.1" width="28.301725387573242" height="28" viewBox="0 0 28.301725387573242 28">
    <g>
      <path d="M26.123,0L18.5056,0C16.7289,0,15.1479,0.920133,14.1536,2.33527C13.1593,0.920133,11.5782,0,9.80156,0L2.17873,0C0.977982,0,0,1.04825,0,2.33527L0,23.9176C0,25.2047,0.977982,26.2529,2.17873,26.2529L10.1819,26.2529C11.2522,27.371,12.6703,28,14.1536,28C15.6369,28,17.0549,27.371,18.1253,26.2529L26.123,26.2529C27.3237,26.2529,28.3017,25.2047,28.3017,23.9176L28.3017,2.33527C28.3017,1.04825,27.3237,0,26.123,0ZM26.123,23.9176L17.6526,23.9176C17.3375,23.9176,17.0332,24.0632,16.8267,24.3253C16.1476,25.1755,15.1696,25.6647,14.1536,25.6647C13.1376,25.6647,12.1596,25.1755,11.4804,24.3253C11.274,24.0632,10.9697,23.9176,10.6546,23.9176L2.17873,23.9176L2.17873,2.33527L9.79612,2.33527C11.5945,2.33527,13.0615,3.90765,13.0615,5.83527L13.0615,15.7529C13.0615,16.3993,13.5505,16.9176,14.1481,16.9176C14.7512,16.9176,15.2348,16.3935,15.2348,15.7529L15.2348,5.83527C15.2348,3.90765,16.7018,2.33527,18.5002,2.33527L26.123,2.33527L26.123,23.9176Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
    </g>
  </svg>
);
const softwareIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" fill="none" version="1.1" width="39" height="32" viewBox="0 0 39 32">
    <defs>
      <clipPath id="master_svg0_12_04062">
        <rect x="0" y="0" width="39" height="32" rx="0" />
      </clipPath>
    </defs>
    <g clipPath="url(#master_svg0_12_04062)">
      <g>
        <path d="M10.1399609375,10.239931640625C9.278400937499999,10.239931640625,8.579960937500001,10.813011640625,8.579960937500001,11.519931640625L8.579960937500001,24.959931640625C8.579960937500001,25.666831640625,9.278400937499999,26.239931640625,10.1399609375,26.239931640625L28.8599609375,26.239931640625C29.7215609375,26.239931640625,30.4199609375,25.666831640625,30.4199609375,24.959931640625L30.4199609375,11.519931640625C30.4199609375,10.813011640625,29.7215609375,10.239931640625,28.8599609375,10.239931640625L10.1399609375,10.239931640625ZM10.1399609375,7.679931640625L28.8599609375,7.679931640625C31.4446609375,7.679931640625,33.5399609375,9.399161640625,33.5399609375,11.519931640625L33.5399609375,24.959931640625C33.5399609375,27.080731640625,31.4446609375,28.799931640625,28.8599609375,28.799931640625L10.1399609375,28.799931640625C7.5552709375,28.799931640625,5.459961518645,27.080731640625,5.4599609375,24.959931640625L5.4599609375,11.519931640625C5.4599609375,9.399161640625,7.5552709375,7.679932594299,10.1399609375,7.679931640625Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
      </g>
      <g>
        <path d="M15.600102539062501,5.7600732421875005L15.600102539062501,8.9600732421875L12.4801025390625,8.9600732421875L12.4801025390625,5.1200732421875C12.4801037013525,4.0596862421874995,13.5277525390625,3.2000734806065,14.8201025390625,3.2000732421875L24.1801025390625,3.2000732421875C25.4724025390625,3.2000734806065,26.5201025390625,4.0596862421874995,26.5201025390625,5.1200732421875L26.5201025390625,8.9600732421875L23.4001025390625,8.9600732421875L23.4001025390625,5.7600732421875005L15.600102539062501,5.7600732421875005Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
      </g>
      <g>
        <path d="M8.5798974609375,17.2801513671875L30.4198974609375,17.2801513671875Q31.9798974609375,17.2801513671875,31.9798974609375,18.5601513671875Q31.9798974609375,19.8401513671875,30.4198974609375,19.8401513671875L8.5798974609375,19.8401513671875Q7.0198974609375,19.8401513671875,7.0198974609375,18.5601513671875Q7.0198974609375,17.2801513671875,8.5798974609375,17.2801513671875Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
      </g>
      <g>
        <path d="M14.0401025390625,15.3599853515625Q15.600102539062501,15.3599853515625,15.600102539062501,16.6399853515625L15.600102539062501,20.4799853515625Q15.600102539062501,21.7599853515625,14.0401025390625,21.7599853515625Q12.4801025390625,21.7599853515625,12.4801025390625,20.4799853515625L12.4801025390625,16.6399853515625Q12.4801025390625,15.3599853515625,14.0401025390625,15.3599853515625Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
      </g>
      <g>
        <path d="M24.9600244140625,15.3599853515625Q26.5200244140625,15.3599853515625,26.5200244140625,16.6399853515625L26.5200244140625,20.4799853515625Q26.5200244140625,21.7599853515625,24.9600244140625,21.7599853515625Q23.4000244140625,21.7599853515625,23.4000244140625,20.4799853515625L23.4000244140625,16.6399853515625Q23.4000244140625,15.3599853515625,24.9600244140625,15.3599853515625Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
      </g>
    </g>
  </svg>
);
const userIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" fill="none" version="1.1" width="27.076923370361328" height="27.076923370361328" viewBox="0 0 27.076923370361328 27.076923370361328">
    <g>
      <path d="M13.5385,0C6.05538,0,0,6.05538,0,13.5385C0,17.1323,1.40308,20.3938,3.68,22.8185C4.48,23.6677,5.40308,24.4185,6.4,25.0462C8.46769,26.3385,10.9169,27.0769,13.5385,27.0769C16.16,27.0769,18.6092,26.3262,20.6769,25.0462C21.6738,24.4185,22.5969,23.68,23.3969,22.8185C25.6738,20.3938,27.0769,17.1323,27.0769,13.5385C27.0769,6.05538,21.0215,-2.38419e-7,13.5385,0ZM13.5385,24.1231C11.1138,24.1231,8.87385,23.2985,7.08923,21.92C8.23385,19.5077,10.6954,17.8462,13.5385,17.8462C16.3815,17.8462,18.8431,19.52,19.9877,21.92C18.2031,23.2985,15.9631,24.1231,13.5385,24.1231ZM10.9538,12.3077C10.9538,10.88,12.1108,9.72308,13.5385,9.72308C14.9662,9.72308,16.1231,10.88,16.1231,12.3077C16.1231,13.7354,14.9662,14.8923,13.5385,14.8923C12.1108,14.8923,10.9538,13.7354,10.9538,12.3077ZM22.1292,19.7046C21.0954,18.0308,19.5938,16.6769,17.7969,15.84C18.5969,14.88,19.0769,13.6492,19.0769,12.3077C19.0769,9.25538,16.5908,6.76923,13.5385,6.76923C10.4862,6.76923,8,9.25538,8,12.3077C8,13.6492,8.48,14.88,9.28,15.84C7.48308,16.6769,5.98154,18.0308,4.94769,19.7046C3.69231,17.9692,2.95385,15.84,2.95385,13.5385C2.95385,7.70462,7.70462,2.95385,13.5385,2.95385C19.3723,2.95385,24.1231,7.70461,24.1231,13.5385C24.1231,15.84,23.3846,17.9692,22.1292,19.7046Z" fill={`${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}`} fillOpacity="1" />
    </g>
  </svg>
);
const iconList: any = {
  'home': <HomeOutlined />,
  'project': <Icon component={projectIcon} />,
  'collect': <VideoCameraOutlined />,
  'plugin': <Icon component={pluginIcon} />,
  'model': <BlockOutlined />,
  'alert': <FundProjectionScreenOutlined />,
  'document': <Icon component={documentIcon} />,
  'software': <Icon component={softwareIcon} />,
  'auth': <AuditOutlined />
};

interface Props {

}

const SiderNav: React.FC<Props> = (props: any) => {
  const { ipcRenderer }: any = window || {};
  const userAuthList = getUserAuthList();
  const userInfo = getUserData();
  const navigate = useNavigate();
  const { pathname } = useLocation();
  const selectedKeys = useMemo(() => {
    return pathname === '/' ? (userAuthList?.includes('projects.list') ? '/home' : '/alert') : pathname;
  }, [pathname]);
  const sliderList = menuConfig?.map?.(menu => {
    const { name, path, id, icon = '', check } = menu;
    return (!check || userAuthList?.includes(id)) ?
      {
        key: path,
        label: <Popover placement="right" content={name}>
          {iconList[icon]}
        </Popover>,
      }
      : null;
  })?.filter(Boolean);

  return (
    <Sider className={styles.basicLayoutSider}>
      {/* <img src={icon} alt="图标" className="sider-icon" /> */}
      <Menu
        // mode="inline"
        selectedKeys={[
          selectedKeys !== '/' ?
            (menuConfig?.filter((i: any) => selectedKeys?.indexOf(i.path) > -1)?.[0]?.path || selectedKeys)
            : '/home'
        ]}
        onClick={({ key }) => {
          navigate(key);
        }}
        items={sliderList}
      />
      <Tooltip title={ipcRenderer?.process?.env?.APP_VERSION || 'V0.1.0.Alpha'} placement="left">
        <div className="sider-bottom flex-box-column">
          <div className="sider-bottom-title">UBVISION</div>
          <span className="sider-bottom-label">V{ipcRenderer?.process?.env?.APP_VERSION || '0.1.0.Alpha'}</span>
        </div>
      </Tooltip>
      <div
        className={`setting-icon-box flex-box-center ${selectedKeys?.indexOf('/userSetting') > -1 ? 'menu-selected-self' : ''}`}
        onClick={() => {
          if (!!userInfo?.userName && userInfo?.userName !== 'sany') {
            navigate('/userSetting', { replace: true });
          } else {
            localStorage.removeItem('userInfo');
            navigate('/login', { replace: true });
          }
        }}
      >
        <div className="flex-box-center circle-box" style={{ borderColor: `${localStorage.getItem('theme-mode') === 'dark' ? '#fff' : '#000'}` }}>
          <UserOutlined className="bottom-setting-icon" />
        </div>
      </div>
      <div
        className={`setting-icon-box flex-box-center ${selectedKeys?.indexOf('/setting') > -1 ? 'menu-selected-self' : ''}`}
        style={{ marginBottom: 12 }}
        onClick={() => {
          navigate('/setting', { replace: true });
        }}
      >
        <SettingOutlined className="bottom-setting-icon" />
      </div>
    </Sider>
  );
};

export default SiderNav;
